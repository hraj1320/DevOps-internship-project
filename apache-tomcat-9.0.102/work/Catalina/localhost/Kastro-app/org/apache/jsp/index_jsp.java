/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-03-08 20:30:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>Kastro Kiran V</title>\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"kastro.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n");
      out.write("    <style>\n");
      out.write("        body {\n");
      out.write("            font-family: Arial, sans-serif;\n");
      out.write("            margin: 0;\n");
      out.write("            padding: 0;\n");
      out.write("            display: flex;\n");
      out.write("            flex-direction: column;\n");
      out.write("            align-items: center;\n");
      out.write("            justify-content: space-between;\n");
      out.write("            min-height: 100vh;\n");
      out.write("        }\n");
      out.write("        .container {\n");
      out.write("            flex: 1;\n");
      out.write("            display: flex;\n");
      out.write("            justify-content: space-between;\n");
      out.write("            align-items: flex-start;\n");
      out.write("            flex-wrap: wrap;\n");
      out.write("            padding: 20px;\n");
      out.write("            box-sizing: border-box;\n");
      out.write("            position: relative; /* Needed for absolute positioning of image */\n");
      out.write("        }\n");
      out.write("        .content {\n");
      out.write("            flex-basis: 60%;\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("        }\n");
      out.write("        .image-container {\n");
      out.write("            flex-basis: 35%;\n");
      out.write("            text-align: right;\n");
      out.write("            margin-top: auto; /* Pushes the image to the bottom */\n");
      out.write("        }\n");
      out.write("        .profile-image {\n");
      out.write("            display: block;\n");
      out.write("            max-width: 150px; /* Adjust the size as needed */\n");
      out.write("            border-radius: 50%;\n");
      out.write("            margin-top: 10px;\n");
      out.write("            background-color: transparent; /* Ensure transparency */\n");
      out.write("            position: absolute;\n");
      out.write("            bottom: 10px;\n");
      out.write("            right: 20px;\n");
      out.write("        }\n");
      out.write("        .copyright {\n");
      out.write("            position: absolute;\n");
      out.write("            bottom: 20px;\n");
      out.write("            text-align: right;\n");
      out.write("            width: 100%;\n");
      out.write("            font-size: 12px; /* Adjust font size as needed */\n");
      out.write("        }\n");
      out.write("        .copyright .icon {\n");
      out.write("            font-size: 14px;\n");
      out.write("            margin-right: 5px;\n");
      out.write("        }\n");
      out.write("        .curriculum {\n");
      out.write("            text-decoration: underline;\n");
      out.write("        }\n");
      out.write("        .name {\n");
      out.write("            color: darkblue; /* Changed the color to DarkBlue */\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div class=\"container\">\n");
      out.write("        <div class=\"content\">\n");
      out.write("            <h1Hello ... ! <span class=\"name\">Cloud Enthusiast !</span></h1>\n");
      out.write("            <p>My name is <span class=\"highlighted-name\">Kastro</span>, I am an <span class=\"trainer\">AWS and DevOps Trainer</span>.</p>\n");
      out.write("            <p class=\"curriculum\"><em>My Recommended curriculum to become a DevOps Engineer:</em></p>\n");
      out.write("            <p><strong>AWS Concepts:</strong> Introduction to Cloud, Cloud Service Providers, AWS Global Infrastructure, S3, EFS, EC2, Auto Scaling, Load Balancers, VPC, IAM, RDS, Dynamo DB, SNS, Cloud Watch, LighSail, Cloud Trial, SQS, SES, Route 53, SnowBall, Elastic BeanStalk, Cloud Formation</p>\n");
      out.write("            <p><strong>Linux and Shell Scripting</strong></p>\n");
      out.write("            <p><strong>DevOps Concepts:</strong> System Architecture, Introduction to DevOps, SDLC - Concept & Models, Maven, Git, GitHub, Tomcat, Jenkins, Docker, Kubernetes, Terraform, Ansible, SonarQube</p>\n");
      out.write("            <p>\n");
      out.write("                <a href=\"https://youtube.com/playlist?list=PLs-PsDpuAuTdOcZa-DDgG8KRbtMI_XRrC&si=7qb7yp6si8oeNwDh\" target=\"_blank\">\n");
      out.write("                    <button class=\"aws-button\"><i class=\"fab fa-aws\"></i> AWS FREE Tutorials</button>\n");
      out.write("                </a>\n");
      out.write("                <a href=\"https://www.youtube.com/playlist?list=PLs-PsDpuAuTeNx3OgGQ1QrpNBo-XE6VBh\" target=\"_blank\">\n");
      out.write("                    <button class=\"docker-button\"><i class=\"fab fa-docker\"></i> Docker - Basics to Brilliance</button>\n");
      out.write("                </a>\n");
      out.write("                <a href=\"https://www.linkedin.com/in/kastro-kiran/\" target=\"_blank\">\n");
      out.write("                    <button class=\"linkedin-button\"><i class=\"fab fa-linkedin\"></i> Kastro - LinkedIn</button>\n");
      out.write("                </a>\n");
      out.write("            </p>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("    <div class=\"image-container\">\n");
      out.write("        <!-- Image at the bottom right of the page -->\n");
      out.write("        <img src=\"https://media.licdn.com/dms/image/D5603AQHJB_lF1d9OSw/profile-displayphoto-shrink_800_800/0/1718971147172?e=1724284800&v=beta&t=HJC2dPANaLQK7Rs4P6UoZvRAdz0Se5s5js9SvlzhXXI\" alt=\"Profile Image\" class=\"profile-image\">\n");
      out.write("    </div>\n");
      out.write("    <div class=\"copyright\">\n");
      out.write("        <span class=\"icon\">&copy;</span> Kastro\n");
      out.write("    </div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
